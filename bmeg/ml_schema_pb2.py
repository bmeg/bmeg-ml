# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bmeg/ml_schema.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='bmeg/ml_schema.proto',
  package='ml_schema',
  syntax='proto2',
  serialized_pb=_b('\n\x14\x62meg/ml_schema.proto\x12\tml_schema\"z\n\x10ModelPerformance\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12)\n\x07metrics\x18\x02 \x03(\x0b\x32\x18.ml_schema.MetricSummary\x12)\n\x07\x63utoffs\x18\x03 \x03(\x0b\x32\x18.ml_schema.CutoffMetrics\"s\n\x05Model\x12\n\n\x02id\x18\x01 \x01(\t\x12,\n\tstructure\x18\x02 \x01(\x0b\x32\x19.ml_schema.ModelStructure\x12\x30\n\x0bperformance\x18\x03 \x03(\x0b\x32\x1b.ml_schema.ModelPerformance\",\n\rMetricSummary\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02\"o\n\x0f\x43onfusionMatrix\x12\x15\n\rtrue_positive\x18\x01 \x01(\x02\x12\x15\n\rtrue_negative\x18\x02 \x01(\x02\x12\x16\n\x0e\x66\x61lse_positive\x18\x03 \x01(\x02\x12\x16\n\x0e\x66\x61lse_negative\x18\x04 \x01(\x02\"I\n\rCutoffMetrics\x12\r\n\x05value\x18\x01 \x01(\x02\x12)\n\x05truth\x18\x02 \x01(\x0b\x32\x1a.ml_schema.ConfusionMatrix\"|\n\x0eModelStructure\x12\x34\n\rrandom_forest\x18\x01 \x01(\x0b\x32\x1b.ml_schema.RandomForestDataH\x00\x12,\n\x06linear\x18\x02 \x01(\x0b\x32\x1a.ml_schema.LinearCoeffDataH\x00\x42\x06\n\x04\x44\x61ta\"\xcd\x01\n\x0c\x44\x65\x63isionTree\x12\x33\n\x05nodes\x18\x01 \x03(\x0b\x32$.ml_schema.DecisionTree.DecisionNode\x1a\x87\x01\n\x0c\x44\x65\x63isionNode\x12\x13\n\x0b\x61\x62ove_child\x18\x01 \x02(\x05\x12\x13\n\x0b\x62\x65low_child\x18\x02 \x02(\x05\x12\x16\n\x0esplit_variable\x18\x03 \x02(\t\x12\x13\n\x0bsplit_value\x18\x04 \x02(\x01\x12\x11\n\tleaf_node\x18\x05 \x02(\x08\x12\r\n\x05label\x18\x06 \x02(\x08\";\n\x10RandomForestData\x12\'\n\x06\x66orest\x18\x01 \x03(\x0b\x32\x17.ml_schema.DecisionTree\"\x97\x01\n\x0fLinearCoeffData\x12\x11\n\tintercept\x18\x01 \x01(\x02\x12\r\n\x05\x61lpha\x18\x02 \x01(\x02\x12\x34\n\x05\x63oeff\x18\x03 \x03(\x0b\x32%.ml_schema.LinearCoeffData.CoeffEntry\x1a,\n\nCoeffEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\"4\n\x12\x46\x65\x61tureCoefficient\x12\x0f\n\x07\x66\x65\x61ture\x18\x01 \x01(\t\x12\r\n\x05\x63oeff\x18\x02 \x01(\x02')
)




_MODELPERFORMANCE = _descriptor.Descriptor(
  name='ModelPerformance',
  full_name='ml_schema.ModelPerformance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='model_id', full_name='ml_schema.ModelPerformance.model_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metrics', full_name='ml_schema.ModelPerformance.metrics', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cutoffs', full_name='ml_schema.ModelPerformance.cutoffs', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=35,
  serialized_end=157,
)


_MODEL = _descriptor.Descriptor(
  name='Model',
  full_name='ml_schema.Model',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ml_schema.Model.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='structure', full_name='ml_schema.Model.structure', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='performance', full_name='ml_schema.Model.performance', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=159,
  serialized_end=274,
)


_METRICSUMMARY = _descriptor.Descriptor(
  name='MetricSummary',
  full_name='ml_schema.MetricSummary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='ml_schema.MetricSummary.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='ml_schema.MetricSummary.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=276,
  serialized_end=320,
)


_CONFUSIONMATRIX = _descriptor.Descriptor(
  name='ConfusionMatrix',
  full_name='ml_schema.ConfusionMatrix',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='true_positive', full_name='ml_schema.ConfusionMatrix.true_positive', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='true_negative', full_name='ml_schema.ConfusionMatrix.true_negative', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='false_positive', full_name='ml_schema.ConfusionMatrix.false_positive', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='false_negative', full_name='ml_schema.ConfusionMatrix.false_negative', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=322,
  serialized_end=433,
)


_CUTOFFMETRICS = _descriptor.Descriptor(
  name='CutoffMetrics',
  full_name='ml_schema.CutoffMetrics',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='ml_schema.CutoffMetrics.value', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='truth', full_name='ml_schema.CutoffMetrics.truth', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=435,
  serialized_end=508,
)


_MODELSTRUCTURE = _descriptor.Descriptor(
  name='ModelStructure',
  full_name='ml_schema.ModelStructure',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='random_forest', full_name='ml_schema.ModelStructure.random_forest', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linear', full_name='ml_schema.ModelStructure.linear', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Data', full_name='ml_schema.ModelStructure.Data',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=510,
  serialized_end=634,
)


_DECISIONTREE_DECISIONNODE = _descriptor.Descriptor(
  name='DecisionNode',
  full_name='ml_schema.DecisionTree.DecisionNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='above_child', full_name='ml_schema.DecisionTree.DecisionNode.above_child', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='below_child', full_name='ml_schema.DecisionTree.DecisionNode.below_child', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='split_variable', full_name='ml_schema.DecisionTree.DecisionNode.split_variable', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='split_value', full_name='ml_schema.DecisionTree.DecisionNode.split_value', index=3,
      number=4, type=1, cpp_type=5, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='leaf_node', full_name='ml_schema.DecisionTree.DecisionNode.leaf_node', index=4,
      number=5, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label', full_name='ml_schema.DecisionTree.DecisionNode.label', index=5,
      number=6, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=707,
  serialized_end=842,
)

_DECISIONTREE = _descriptor.Descriptor(
  name='DecisionTree',
  full_name='ml_schema.DecisionTree',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodes', full_name='ml_schema.DecisionTree.nodes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_DECISIONTREE_DECISIONNODE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=637,
  serialized_end=842,
)


_RANDOMFORESTDATA = _descriptor.Descriptor(
  name='RandomForestData',
  full_name='ml_schema.RandomForestData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='forest', full_name='ml_schema.RandomForestData.forest', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=844,
  serialized_end=903,
)


_LINEARCOEFFDATA_COEFFENTRY = _descriptor.Descriptor(
  name='CoeffEntry',
  full_name='ml_schema.LinearCoeffData.CoeffEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ml_schema.LinearCoeffData.CoeffEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='ml_schema.LinearCoeffData.CoeffEntry.value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1013,
  serialized_end=1057,
)

_LINEARCOEFFDATA = _descriptor.Descriptor(
  name='LinearCoeffData',
  full_name='ml_schema.LinearCoeffData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='intercept', full_name='ml_schema.LinearCoeffData.intercept', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alpha', full_name='ml_schema.LinearCoeffData.alpha', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='coeff', full_name='ml_schema.LinearCoeffData.coeff', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINEARCOEFFDATA_COEFFENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=906,
  serialized_end=1057,
)


_FEATURECOEFFICIENT = _descriptor.Descriptor(
  name='FeatureCoefficient',
  full_name='ml_schema.FeatureCoefficient',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='feature', full_name='ml_schema.FeatureCoefficient.feature', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='coeff', full_name='ml_schema.FeatureCoefficient.coeff', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1059,
  serialized_end=1111,
)

_MODELPERFORMANCE.fields_by_name['metrics'].message_type = _METRICSUMMARY
_MODELPERFORMANCE.fields_by_name['cutoffs'].message_type = _CUTOFFMETRICS
_MODEL.fields_by_name['structure'].message_type = _MODELSTRUCTURE
_MODEL.fields_by_name['performance'].message_type = _MODELPERFORMANCE
_CUTOFFMETRICS.fields_by_name['truth'].message_type = _CONFUSIONMATRIX
_MODELSTRUCTURE.fields_by_name['random_forest'].message_type = _RANDOMFORESTDATA
_MODELSTRUCTURE.fields_by_name['linear'].message_type = _LINEARCOEFFDATA
_MODELSTRUCTURE.oneofs_by_name['Data'].fields.append(
  _MODELSTRUCTURE.fields_by_name['random_forest'])
_MODELSTRUCTURE.fields_by_name['random_forest'].containing_oneof = _MODELSTRUCTURE.oneofs_by_name['Data']
_MODELSTRUCTURE.oneofs_by_name['Data'].fields.append(
  _MODELSTRUCTURE.fields_by_name['linear'])
_MODELSTRUCTURE.fields_by_name['linear'].containing_oneof = _MODELSTRUCTURE.oneofs_by_name['Data']
_DECISIONTREE_DECISIONNODE.containing_type = _DECISIONTREE
_DECISIONTREE.fields_by_name['nodes'].message_type = _DECISIONTREE_DECISIONNODE
_RANDOMFORESTDATA.fields_by_name['forest'].message_type = _DECISIONTREE
_LINEARCOEFFDATA_COEFFENTRY.containing_type = _LINEARCOEFFDATA
_LINEARCOEFFDATA.fields_by_name['coeff'].message_type = _LINEARCOEFFDATA_COEFFENTRY
DESCRIPTOR.message_types_by_name['ModelPerformance'] = _MODELPERFORMANCE
DESCRIPTOR.message_types_by_name['Model'] = _MODEL
DESCRIPTOR.message_types_by_name['MetricSummary'] = _METRICSUMMARY
DESCRIPTOR.message_types_by_name['ConfusionMatrix'] = _CONFUSIONMATRIX
DESCRIPTOR.message_types_by_name['CutoffMetrics'] = _CUTOFFMETRICS
DESCRIPTOR.message_types_by_name['ModelStructure'] = _MODELSTRUCTURE
DESCRIPTOR.message_types_by_name['DecisionTree'] = _DECISIONTREE
DESCRIPTOR.message_types_by_name['RandomForestData'] = _RANDOMFORESTDATA
DESCRIPTOR.message_types_by_name['LinearCoeffData'] = _LINEARCOEFFDATA
DESCRIPTOR.message_types_by_name['FeatureCoefficient'] = _FEATURECOEFFICIENT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ModelPerformance = _reflection.GeneratedProtocolMessageType('ModelPerformance', (_message.Message,), dict(
  DESCRIPTOR = _MODELPERFORMANCE,
  __module__ = 'bmeg.ml_schema_pb2'
  # @@protoc_insertion_point(class_scope:ml_schema.ModelPerformance)
  ))
_sym_db.RegisterMessage(ModelPerformance)

Model = _reflection.GeneratedProtocolMessageType('Model', (_message.Message,), dict(
  DESCRIPTOR = _MODEL,
  __module__ = 'bmeg.ml_schema_pb2'
  # @@protoc_insertion_point(class_scope:ml_schema.Model)
  ))
_sym_db.RegisterMessage(Model)

MetricSummary = _reflection.GeneratedProtocolMessageType('MetricSummary', (_message.Message,), dict(
  DESCRIPTOR = _METRICSUMMARY,
  __module__ = 'bmeg.ml_schema_pb2'
  # @@protoc_insertion_point(class_scope:ml_schema.MetricSummary)
  ))
_sym_db.RegisterMessage(MetricSummary)

ConfusionMatrix = _reflection.GeneratedProtocolMessageType('ConfusionMatrix', (_message.Message,), dict(
  DESCRIPTOR = _CONFUSIONMATRIX,
  __module__ = 'bmeg.ml_schema_pb2'
  # @@protoc_insertion_point(class_scope:ml_schema.ConfusionMatrix)
  ))
_sym_db.RegisterMessage(ConfusionMatrix)

CutoffMetrics = _reflection.GeneratedProtocolMessageType('CutoffMetrics', (_message.Message,), dict(
  DESCRIPTOR = _CUTOFFMETRICS,
  __module__ = 'bmeg.ml_schema_pb2'
  # @@protoc_insertion_point(class_scope:ml_schema.CutoffMetrics)
  ))
_sym_db.RegisterMessage(CutoffMetrics)

ModelStructure = _reflection.GeneratedProtocolMessageType('ModelStructure', (_message.Message,), dict(
  DESCRIPTOR = _MODELSTRUCTURE,
  __module__ = 'bmeg.ml_schema_pb2'
  # @@protoc_insertion_point(class_scope:ml_schema.ModelStructure)
  ))
_sym_db.RegisterMessage(ModelStructure)

DecisionTree = _reflection.GeneratedProtocolMessageType('DecisionTree', (_message.Message,), dict(

  DecisionNode = _reflection.GeneratedProtocolMessageType('DecisionNode', (_message.Message,), dict(
    DESCRIPTOR = _DECISIONTREE_DECISIONNODE,
    __module__ = 'bmeg.ml_schema_pb2'
    # @@protoc_insertion_point(class_scope:ml_schema.DecisionTree.DecisionNode)
    ))
  ,
  DESCRIPTOR = _DECISIONTREE,
  __module__ = 'bmeg.ml_schema_pb2'
  # @@protoc_insertion_point(class_scope:ml_schema.DecisionTree)
  ))
_sym_db.RegisterMessage(DecisionTree)
_sym_db.RegisterMessage(DecisionTree.DecisionNode)

RandomForestData = _reflection.GeneratedProtocolMessageType('RandomForestData', (_message.Message,), dict(
  DESCRIPTOR = _RANDOMFORESTDATA,
  __module__ = 'bmeg.ml_schema_pb2'
  # @@protoc_insertion_point(class_scope:ml_schema.RandomForestData)
  ))
_sym_db.RegisterMessage(RandomForestData)

LinearCoeffData = _reflection.GeneratedProtocolMessageType('LinearCoeffData', (_message.Message,), dict(

  CoeffEntry = _reflection.GeneratedProtocolMessageType('CoeffEntry', (_message.Message,), dict(
    DESCRIPTOR = _LINEARCOEFFDATA_COEFFENTRY,
    __module__ = 'bmeg.ml_schema_pb2'
    # @@protoc_insertion_point(class_scope:ml_schema.LinearCoeffData.CoeffEntry)
    ))
  ,
  DESCRIPTOR = _LINEARCOEFFDATA,
  __module__ = 'bmeg.ml_schema_pb2'
  # @@protoc_insertion_point(class_scope:ml_schema.LinearCoeffData)
  ))
_sym_db.RegisterMessage(LinearCoeffData)
_sym_db.RegisterMessage(LinearCoeffData.CoeffEntry)

FeatureCoefficient = _reflection.GeneratedProtocolMessageType('FeatureCoefficient', (_message.Message,), dict(
  DESCRIPTOR = _FEATURECOEFFICIENT,
  __module__ = 'bmeg.ml_schema_pb2'
  # @@protoc_insertion_point(class_scope:ml_schema.FeatureCoefficient)
  ))
_sym_db.RegisterMessage(FeatureCoefficient)


_LINEARCOEFFDATA_COEFFENTRY.has_options = True
_LINEARCOEFFDATA_COEFFENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
